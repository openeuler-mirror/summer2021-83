--- linux-4.4.283/kernel/sched/fair.c	2021-09-03 15:43:08.000000000 +0800
+++ /usr/src/kernels/linux-4.4.283.9.29/kernel/sched/fair.c	2021-09-29 12:39:51.421976296 +0800
@@ -31,6 +31,10 @@
 #include <linux/migrate.h>
 #include <linux/task_work.h>
 
+#include <linux/kernel.h>
+#include <linux/timekeeping.h>
+#include <uapi/linux/time.h>
+
 #include <trace/events/sched.h>
 
 #include "sched.h"
@@ -4270,6 +4274,8 @@ enqueue_task_fair(struct rq *rq, struct
 {
 	struct cfs_rq *cfs_rq;
 	struct sched_entity *se = &p->se;
+	struct timeval start,end;
+	do_gettimeofday(&start);
 
 	for_each_sched_entity(se) {
 		if (se->on_rq)
@@ -4305,6 +4311,10 @@ enqueue_task_fair(struct rq *rq, struct
 		add_nr_running(rq, 1);
 
 	hrtick_update(rq);
+	do_gettimeofday(&end);
+	p->in_queue_time = end.tv_usec - start.tv_usec;
+	p->runnable_s = end.tv_sec;
+	p->runnable_us = end.tv_usec;
 }
 
 static void set_next_buddy(struct sched_entity *se);
@@ -4318,6 +4328,8 @@ static void dequeue_task_fair(struct rq
 {
 	struct cfs_rq *cfs_rq;
 	struct sched_entity *se = &p->se;
+	struct timeval start,end;
+	do_gettimeofday(&start);
 	int task_sleep = flags & DEQUEUE_SLEEP;
 
 	for_each_sched_entity(se) {
@@ -4364,6 +4376,8 @@ static void dequeue_task_fair(struct rq
 		sub_nr_running(rq, 1);
 
 	hrtick_update(rq);
+	do_gettimeofday(&end);
+	p->out_queue_time = end.tv_usec - start.tv_usec;
 }
 
 #ifdef CONFIG_SMP
